[tool.poetry]
name = "data_extractor"
version = "1.0.0"
description = "Spark JDBC data extraction module for Oracle databases with parallel processing"
authors = ["Data Engineering Team"]
packages = [{ include = "data_extractor" }]

[tool.poetry.dependencies]
python = "^3.9"
pyspark = ">=3.4.0"
py4j = ">=0.10.9.7"
cx_Oracle = ">=8.3.0"
python-dateutil = ">=2.8.2"
pytz = ">=2023.3"
PyYAML = ">=6.0"
pydantic = ">=2.0.0"
pydantic-settings = ">=2.0.0"
psutil = ">=5.9.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-cov = "^4.1.0"

# Code quality
black = "^24.3.0"
isort = "^5.12.0"
ruff = "^0.12.4"

# Type checking
mypy = "^1.5.0"
types-python-dateutil = "^2.8.0"
types-PyYAML = "^6.0.0"

# Security
bandit = "^1.7.0"
safety = "^2.3.0"

# Development tools
pre-commit = "^3.4.0"
types-psutil = "^7.0.0.20250601"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pyspark.*",
    "py4j.*",
    "cx_Oracle.*",
]
ignore_missing_imports = true

# Allow pydantic-settings Field with env parameter
[[tool.mypy.overrides]]
module = "data_extractor.config"
warn_return_any = false
disallow_untyped_defs = false

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test
