version: '3.8'

services:
  data-extractor:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VERSION: ${VERSION:-1.0.0}
    image: data-extractor:${VERSION:-latest}
    container_name: data-extractor
    restart: unless-stopped
    
    # Environment variables
    environment:
      # Oracle Database Configuration
      - ORACLE_HOST=${ORACLE_HOST:-oracle-db}
      - ORACLE_PORT=${ORACLE_PORT:-1521}
      - ORACLE_SERVICE=${ORACLE_SERVICE:-XE}
      - ORACLE_USER=${ORACLE_USER:-testuser}
      - ORACLE_PASSWORD=${ORACLE_PASSWORD:-testpass}
      
      # Application Configuration
      - OUTPUT_BASE_PATH=/app/data
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_WORKERS=${MAX_WORKERS:-4}
      
      # Spark Configuration
      - SPARK_DRIVER_MEMORY=${SPARK_DRIVER_MEMORY:-2g}
      - SPARK_EXECUTOR_MEMORY=${SPARK_EXECUTOR_MEMORY:-2g}
      - PYSPARK_PYTHON=python3
      - SPARK_MASTER=spark://spark-master:7077
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
    
    # Volume mounts
    volumes:
      # Data output directory
      - ./data:/app/data
      # Log directory
      - ./logs:/app/logs
      # Configuration files
      - ./config:/app/config:ro
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 1G
    
    # Network settings
    networks:
      - data-extractor-net
    
    # For testing without Oracle database
    command: ["python", "-c", "print('Data Extractor Test Mode'); import time; time.sleep(3600)"]
    
    depends_on:
      - oracle-db
      - spark-master
      - spark-worker
      - minio
      - minio-init

  # Mock Oracle Database for testing
  oracle-db:
    image: gvenzl/oracle-xe:21-slim
    container_name: oracle-test-db
    environment:
      - ORACLE_PASSWORD=testpass
      - APP_USER=testuser
      - APP_USER_PASSWORD=testpass
    ports:
      - "1521:1521"
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./scripts/init-oracle.sql:/container-entrypoint-initdb.d/init.sql:ro
    networks:
      - data-extractor-net
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 5

  spark-master:
    image: bitnami/spark:3.4
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - data-extractor-net

  spark-worker:
    image: bitnami/spark:3.4
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    networks:
      - data-extractor-net

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - data-extractor-net

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "until mc alias set myminio http://minio:9000 minioadmin minioadmin; do sleep 3; done; mc mb myminio/test-bucket;"
    networks:
      - data-extractor-net

networks:
  data-extractor-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  oracle-data:
    driver: local
  minio-data:
    driver: local